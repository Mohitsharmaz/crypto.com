{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\masteringreact\\\\project1\\\\src\\\\Components\\\\Trading.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Trading() {\n  _s();\n\n  const [data, setdata] = useState();\n  useEffect(() => {\n    effect;\n    return () => {\n      cleanup;\n    };\n  }, [input]);\n\n  const fetchData = () => {\n    fetch(\"https://api2.binance.com/api/v3/ticker/24hr\").then(response => response.json()).then(data => {\n      setdata(data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Trading, \"m/fvjJaqtLd2rFVGFgjzBuKUmCU=\");\n\n_c = Trading;\nexport default Trading;\n\nvar _c;\n\n$RefreshReg$(_c, \"Trading\");","map":{"version":3,"sources":["E:/React/masteringreact/project1/src/Components/Trading.js"],"names":["React","useEffect","useState","Trading","data","setdata","effect","cleanup","input","fetchData","fetch","then","response","json"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAEf,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAmBH,QAAQ,EAAjC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,MAAM;AACN,WAAO,MAAM;AACTC,MAAAA,OAAO;AACV,KAFD;AAGH,GALQ,EAKN,CAACC,KAAD,CALM,CAAT;;AAMA,QAAMC,SAAS,GAAG,MAAM;AACpBC,IAAAA,KAAK,CAAC,6CAAD,CAAL,CACKC,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWP,IAAD,IAAU;AAAEC,MAAAA,OAAO,CAACD,IAAD,CAAP;AAAe,KAFrC;AAIH,GALD;;AASA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAvBQD,O;;KAAAA,O;AAyBT,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nfunction Trading() {\r\n\r\n    const [ data, setdata] = useState()\r\n    useEffect(() => {\r\n        effect\r\n        return () => {\r\n            cleanup\r\n        }\r\n    }, [input])\r\n    const fetchData = () => {\r\n        fetch(\"https://api2.binance.com/api/v3/ticker/24hr\")\r\n            .then((response) => response.json())\r\n            .then((data) => { setdata(data) });\r\n            \r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Trading\r\n"]},"metadata":{},"sourceType":"module"}