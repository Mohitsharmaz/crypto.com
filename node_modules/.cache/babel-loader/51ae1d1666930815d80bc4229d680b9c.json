{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\masteringreact\\\\crypto.com\\\\src\\\\Components\\\\Trading.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Trading() {\n  _s();\n\n  const [items, setItems] = useState(null);\n  useEffect(() => {\n    fetch(\"https://api2.binance.com/api/v3/ticker/24hr\").then(res => res.json()).then(result => {\n      //   setIsLoaded(true);\n      setItems(result);\n    }, error => {\n      console.log(error);\n    });\n    console.log(items);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Trading, \"x+Cx8sed8V0E5BJyEWTTQ3NrzAs=\");\n\n_c = Trading;\nexport default Trading;\n\nvar _c;\n\n$RefreshReg$(_c, \"Trading\");","map":{"version":3,"sources":["E:/React/masteringreact/crypto.com/src/Components/Trading.js"],"names":["React","useEffect","useState","Trading","items","setItems","fetch","then","res","json","result","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAEf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,IAAD,CAAlC;AAIAD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,CAAC,6CAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACR;AACAL,MAAAA,QAAQ,CAACK,MAAD,CAAR;AACH,KANT,EAOSC,KAAD,IAAW;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KATT;AAYIC,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACP,GAdQ,EAcN,EAdM,CAAT;AAgBA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA3BQD,O;;KAAAA,O;AA6BT,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nfunction Trading() {\r\n\r\n    const [items, setItems] = useState(null)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://api2.binance.com/api/v3/ticker/24hr\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    //   setIsLoaded(true);\r\n                    setItems(result);\r\n                },\r\n                (error) => {\r\n                    console.log(error)\r\n                }\r\n            )\r\n\r\n            console.log(items)\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Trading\r\n"]},"metadata":{},"sourceType":"module"}