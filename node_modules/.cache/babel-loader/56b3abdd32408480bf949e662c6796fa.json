{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\masteringreact\\\\crypto.com\\\\src\\\\Components\\\\Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart(props) {\n  _s();\n\n  const [data, setdata] = useState();\n  useEffect(() => {\n    fetch(`https://api.coingecko.com/api/v3/coins/${props.items.id}/market_chart?vs_currency=usd&days=1`).then(res => res.json()).then(result => {\n      setdata(result);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  console.log(data);\n  const [historicaldata, sethistoricaldata] = useState();\n  const [days, setdays] = useState(1);\n  const ctx = document.getElementById('myChart').getContext('2d');\n  const myChart = new Chart(ctx, {\n    type: 'bar',\n    data: {\n      labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n      datasets: [{\n        label: '# of Votes',\n        data: [12, 19, 3, 5, 2, 3],\n        backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n        borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n        borderWidth: 1\n      }]\n    },\n    options: {\n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"chart\",\n      width: \"400\",\n      height: \"400\",\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"kWYthTgku2vH/DQgRTFhDzTVwZU=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["E:/React/masteringreact/crypto.com/src/Components/Chart.js"],"names":["React","useEffect","useState","Chart","props","data","setdata","fetch","items","id","then","res","json","result","catch","error","console","log","historicaldata","sethistoricaldata","days","setdays","ctx","document","getElementById","getContext","myChart","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAIA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAElB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,EAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEZM,IAAAA,KAAK,CAAE,0CAAyCH,KAAK,CAACI,KAAN,CAAYC,EAAG,sCAA1D,CAAL,CAAsGC,IAAtG,CAA2GC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAlH,EACKF,IADL,CAEQG,MAAM,IAAI;AACNP,MAAAA,OAAO,CAACO,MAAD,CAAP;AACH,KAJT,EAIWC,KAJX,CAIiBC,KAAK,IAAG;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAmB,KAJ7C;AAKK,GAPA,EAOE,EAPF,CAAT;AASQC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AAGR,QAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,EAApD;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,CAAD,CAAhC;AAIA,QAAMoB,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,UAAnC,CAA8C,IAA9C,CAAZ;AACA,QAAMC,OAAO,GAAG,IAAIvB,KAAJ,CAAUmB,GAAV,EAAe;AAC3BK,IAAAA,IAAI,EAAE,KADqB;AAE3BtB,IAAAA,IAAI,EAAE;AACFuB,MAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,OAA1B,EAAmC,QAAnC,EAA6C,QAA7C,CADN;AAEFC,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,KAAK,EAAE,YADA;AAEPzB,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAFC;AAGP0B,QAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAHV;AAWPC,QAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAXN;AAmBPC,QAAAA,WAAW,EAAE;AAnBN,OAAD;AAFR,KAFqB;AA0B3BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE;AACJC,QAAAA,CAAC,EAAE;AACCC,UAAAA,WAAW,EAAE;AADd;AADC;AADH;AA1BkB,GAAf,CAAhB;AAqCA,sBACI;AAAA,2BACA;AAAQ,MAAA,EAAE,EAAC,OAAX;AAAmB,MAAA,KAAK,EAAC,KAAzB;AAA+B,MAAA,MAAM,EAAC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAnEQlC,K;;KAAAA,K;AAqET,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\n\r\n\r\nfunction Chart(props) {\r\n\r\n    const [data, setdata] = useState()\r\n\r\n    useEffect(() => {\r\n\r\n        fetch(`https://api.coingecko.com/api/v3/coins/${props.items.id}/market_chart?vs_currency=usd&days=1`).then(res => res.json())\r\n            .then(\r\n                result => {\r\n                    setdata(result)\r\n                }).catch(error =>{console.log(error)})\r\n            }, [])\r\n            \r\n            console.log(data)\r\n\r\n\r\n    const [historicaldata, sethistoricaldata] = useState();\r\n    const [days, setdays] = useState(1)\r\n\r\n\r\n    \r\n    const ctx = document.getElementById('myChart').getContext('2d');\r\n    const myChart = new Chart(ctx, {\r\n        type: 'bar',\r\n        data: {\r\n            labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n            datasets: [{\r\n                label: '# of Votes',\r\n                data: [12, 19, 3, 5, 2, 3],\r\n                backgroundColor: [\r\n                    'rgba(255, 99, 132, 0.2)',\r\n                    'rgba(54, 162, 235, 0.2)',\r\n                    'rgba(255, 206, 86, 0.2)',\r\n                    'rgba(75, 192, 192, 0.2)',\r\n                    'rgba(153, 102, 255, 0.2)',\r\n                    'rgba(255, 159, 64, 0.2)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(255, 99, 132, 1)',\r\n                    'rgba(54, 162, 235, 1)',\r\n                    'rgba(255, 206, 86, 1)',\r\n                    'rgba(75, 192, 192, 1)',\r\n                    'rgba(153, 102, 255, 1)',\r\n                    'rgba(255, 159, 64, 1)'\r\n                ],\r\n                borderWidth: 1\r\n            }]\r\n        },\r\n        options: {\r\n            scales: {\r\n                y: {\r\n                    beginAtZero: true\r\n                }\r\n            }\r\n        }\r\n    });\r\n  \r\n\r\n\r\n    return (\r\n        <div>\r\n        <canvas id=\"chart\" width=\"400\" height=\"400\"> </canvas>\r\n      \r\n\r\n     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n"]},"metadata":{},"sourceType":"module"}